syntax = "proto3";

package service;

option go_package = "github.com/moos3/sparta/proto";

import "google/protobuf/timestamp.proto";

service AuthService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  rpc CreateAPIKey(CreateAPIKeyRequest) returns (CreateAPIKeyResponse);
  rpc RotateAPIKey(RotateAPIKeyRequest) returns (RotateAPIKeyResponse);
  rpc ActivateAPIKey(ActivateAPIKeyRequest) returns (ActivateAPIKeyResponse);
  rpc DeactivateAPIKey(DeactivateAPIKeyRequest) returns (DeactivateAPIKeyResponse);
  rpc ListAPIKeys(ListAPIKeysRequest) returns (ListAPIKeysResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc InviteUser(InviteUserRequest) returns (InviteUserResponse);
  rpc ValidateInvite(ValidateInviteRequest) returns (ValidateInviteResponse);
}

service UserService {
  // Individual scan methods (retained for flexibility, deprecated as GenerateReport is preferred)
  rpc ScanDomain(ScanDomainRequest) returns (ScanDomainResponse);
  rpc ScanTLS(ScanTLSRequest) returns (ScanTLSResponse);
  rpc ScanCrtSh(ScanCrtShRequest) returns (ScanCrtShResponse);
  rpc ScanChaos(ScanChaosRequest) returns (ScanChaosResponse);
  rpc ScanShodan(ScanShodanRequest) returns (ScanShodanResponse);
  rpc ScanOTX(ScanOTXRequest) returns (ScanOTXResponse);
  rpc ScanWhois(ScanWhoisRequest) returns (ScanWhoisResponse);
  rpc ScanAbuseCh(ScanAbuseChRequest) returns (ScanAbuseChResponse);

  // Methods to retrieve scan results by domain
  rpc GetDNSScanResultsByDomain(GetDNSScanResultsByDomainRequest) returns (GetDNSScanResultsByDomainResponse);
  rpc GetTLSScanResultsByDomain(GetTLSScanResultsByDomainRequest) returns (GetTLSScanResultsByDomainResponse);
  rpc GetCrtShScanResultsByDomain(GetCrtShScanResultsByDomainRequest) returns (GetCrtShScanResultsByDomainResponse);
  rpc GetChaosScanResultsByDomain(GetChaosScanResultsByDomainRequest) returns (GetChaosScanResultsByDomainResponse);
  rpc GetShodanScanResultsByDomain(GetShodanScanResultsByDomainRequest) returns (GetShodanScanResultsByDomainResponse);
  rpc GetOTXScanResultsByDomain(GetOTXScanResultsByDomainRequest) returns (GetOTXScanResultsByDomainResponse);
  rpc GetWhoisScanResultsByDomain(GetWhoisScanResultsByDomainRequest) returns (GetWhoisScanResultsByDomainResponse);
  rpc GetAbuseChScanResultsByDomain(GetAbuseChScanResultsByDomainRequest) returns (GetAbuseChScanResultsByDomainResponse);

  // Method to retrieve a specific DNS scan result by ID
  rpc GetDNSScanResultByID(GetDNSScanResultByIDRequest) returns (GetDNSScanResultByIDResponse);
}

service ReportService {
  rpc GenerateReport(GenerateReportRequest) returns (GenerateReportResponse);
  rpc ListReports(ListReportsRequest) returns (ListReportsResponse);
  rpc GetReportById(GetReportByIdRequest) returns (GetReportByIdResponse);
}

// Report-related messages
message GenerateReportRequest {
  string domain = 1;
}

message GenerateReportResponse {
  string report_id = 1;
  string dns_scan_id = 2;
  int32 score = 3;
  string risk_tier = 4;
  google.protobuf.Timestamp created_at = 5;
}

message ListReportsRequest {
  string domain = 1; // Optional filter
}

message Report {
  string report_id = 1;
  string domain = 2;
  string dns_scan_id = 3;
  int32 score = 4;
  string risk_tier = 5;
  google.protobuf.Timestamp created_at = 6;
}

message ListReportsResponse {
  repeated Report reports = 1;
}

message GetReportByIdRequest {
  string report_id = 1;
}

message GetReportByIdResponse {
  Report report = 1;
}

message CalculateRiskScoreRequest {
  string domain = 1;
}

message CalculateRiskScoreResponse {
  int32 score = 1;
  string risk_tier = 2;
}

message CreateUserRequest {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string password = 4;
  bool is_admin = 5;
}

message CreateUserResponse {
  string user_id = 1;
}

message GetUserRequest {
  string user_id = 1;
}

message GetUserResponse {
  string user_id = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  bool is_admin = 5;
  google.protobuf.Timestamp created_at = 6;
}

message UpdateUserRequest {
  string user_id = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  string password = 5;
}

message UpdateUserResponse {}

message DeleteUserRequest {
  string user_id = 1;
}

message DeleteUserResponse {}

message ListUsersRequest {}

message ListUsersResponse {
  repeated User users = 1;
}

message User {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  bool is_admin = 5;
  google.protobuf.Timestamp created_at = 6;
}

message CreateAPIKeyRequest {
  string user_id = 1;
  string role = 2; // "admin", "user", or "viewer"
  bool is_service_key = 3;
}

message CreateAPIKeyResponse {
  string api_key = 1;
  string role = 2;
  bool is_service_key = 3;
  google.protobuf.Timestamp expires_at = 4;
}

message RotateAPIKeyRequest {
  string api_key = 1;
}

message RotateAPIKeyResponse {
  string new_api_key = 1;
  google.protobuf.Timestamp expires_at = 2;
}

message ActivateAPIKeyRequest {
  string api_key = 1;
}

message ActivateAPIKeyResponse {}

message DeactivateAPIKeyRequest {
  string api_key = 1;
  string deactivation_message = 2;
}

message DeactivateAPIKeyResponse {}

message ListAPIKeysRequest {
  string user_id = 1;
}

message ListAPIKeysResponse {
  repeated APIKey api_keys = 1;
}

message APIKey {
  string api_key = 1;
  string user_id = 2;
  string role = 3;
  bool is_service_key = 4;
  bool is_active = 5;
  string deactivation_message = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp expires_at = 8;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string user_id = 1;
  string first_name = 2;
  string last_name = 3;
  bool is_admin = 4;
  string token = 5;
}

message InviteUserRequest {
  string email = 1;
  bool is_admin = 2;
}

message InviteUserResponse {
  string invitation_id = 1;
  string token = 2;
  google.protobuf.Timestamp expires_at = 3;
}

message ValidateInviteRequest {
  string token = 1;
}

message ValidateInviteResponse {
  string email = 1;
  bool is_admin = 2;
}

message ScanDomainRequest {
  string domain = 1;
}

message ScanDomainResponse {
  string scan_id = 1;
  DNSSecurityResult result = 2;
}

message ScanTLSRequest {
  string domain = 1;
  string dns_scan_id = 2;
}

message ScanTLSResponse {
  string scan_id = 1;
  TLSSecurityResult result = 2;
}

message GetTLSScanResultsByDomainRequest {
  string domain = 1;
}

message GetTLSScanResultsByDomainResponse {
  repeated TLSScanResult results = 1;
}

message TLSScanResult {
  string id = 1;
  string domain = 2;
  string dns_scan_id = 3;
  TLSSecurityResult result = 4;
  google.protobuf.Timestamp created_at = 5;
}

message ScanCrtShRequest {
  string domain = 1;
  string dns_scan_id = 2;
}

message ScanCrtShResponse {
  string scan_id = 1;
  CrtShSecurityResult result = 2;
}

message GetCrtShScanResultsByDomainRequest {
  string domain = 1;
}

message GetCrtShScanResultsByDomainResponse {
  repeated CrtShScanResult results = 1;
}

message CrtShScanResult {
  string id = 1;
  string domain = 2;
  string dns_scan_id = 3;
  CrtShSecurityResult result = 4;
  google.protobuf.Timestamp created_at = 5;
}

message ScanChaosRequest {
  string domain = 1;
  string dns_scan_id = 2;
}

message ScanChaosResponse {
  string scan_id = 1;
  ChaosSecurityResult result = 2;
}

message GetChaosScanResultsByDomainRequest {
  string domain = 1;
}

message GetChaosScanResultsByDomainResponse {
  repeated ChaosScanResult results = 1;
}

message ChaosScanResult {
  string id = 1;
  string domain = 2;
  string dns_scan_id = 3;
  ChaosSecurityResult result = 4;
  google.protobuf.Timestamp created_at = 5;
}

message ScanShodanRequest {
  string domain = 1;
  string dns_scan_id = 2;
}

message ScanShodanResponse {
  string scan_id = 1;
  ShodanSecurityResult result = 2;
}

message GetShodanScanResultsByDomainRequest {
  string domain = 1;
}

message GetShodanScanResultsByDomainResponse {
  repeated ShodanScanResult results = 1;
}

message ShodanScanResult {
  string id = 1;
  string domain = 2;
  string dns_scan_id = 3;
  ShodanSecurityResult result = 4;
  google.protobuf.Timestamp created_at = 5;
}

message ScanOTXRequest {
  string domain = 1;
  string dns_scan_id = 2;
}

message ScanOTXResponse {
  string scan_id = 1;
  OTXSecurityResult result = 2;
}

message GetOTXScanResultsByDomainRequest {
  string domain = 1;
}

message GetOTXScanResultsByDomainResponse {
  repeated OTXScanResult results = 1;
}

message OTXScanResult {
  string id = 1;
  string domain = 2;
  string dns_scan_id = 3;
  OTXSecurityResult result = 4;
  google.protobuf.Timestamp created_at = 5;
}

message ScanWhoisRequest {
  string domain = 1;
  string dns_scan_id = 2;
}

message ScanWhoisResponse {
  string scan_id = 1;
  WhoisSecurityResult result = 2;
}

message GetWhoisScanResultsByDomainRequest {
  string domain = 1;
}

message GetWhoisScanResultsByDomainResponse {
  repeated WhoisScanResult results = 1;
}

message WhoisScanResult {
  string id = 1;
  string domain = 2;
  string dns_scan_id = 3;
  WhoisSecurityResult result = 4;
  google.protobuf.Timestamp created_at = 5;
}

message ScanAbuseChRequest {
  string domain = 1;
  string dns_scan_id = 2;
}

message ScanAbuseChResponse {
  string scan_id = 1;
  AbuseChSecurityResult result = 2;
}

message GetAbuseChScanResultsByDomainRequest {
  string domain = 1;
}

message GetAbuseChScanResultsByDomainResponse {
  repeated AbuseChScanResult results = 1;
}

message AbuseChScanResult {
  string id = 1;
  string domain = 2;
  string dns_scan_id = 3;
  AbuseChSecurityResult result = 4;
  google.protobuf.Timestamp created_at = 5;
}

message GetDNSScanResultsByDomainRequest {
  string domain = 1;
}

message GetDNSScanResultsByDomainResponse {
  repeated DNSScanResult results = 1;
}

message GetDNSScanResultByIDRequest {
  string dns_scan_id = 1;
}

message GetDNSScanResultByIDResponse {
  DNSScanResult result = 1;
}

message DNSScanResult {
  string id = 1;
  string domain = 2;
  string dns_scan_id = 3;
  DNSSecurityResult result = 4;
  google.protobuf.Timestamp created_at = 5;
}

message DNSSecurityResult {
  string spf_record = 1;
  bool spf_valid = 2;
  string spf_policy = 3;
  string dkim_record = 4;
  bool dkim_valid = 5;
  string dkim_validation_error = 6;
  string dmarc_record = 7;
  string dmarc_policy = 8;
  bool dmarc_valid = 9;
  string dmarc_validation_error = 10;
  bool dnssec_enabled = 11;
  bool dnssec_valid = 12;
  string dnssec_validation_error = 13;
  repeated string ip_addresses = 14;
  repeated string mx_records = 15;
  repeated string ns_records = 16;
  repeated string errors = 17;
}

message TLSSecurityResult {
  string tls_version = 1;
  string cipher_suite = 2;
  bool hsts_header = 3;
  bool certificate_valid = 4;
  string cert_issuer = 5;
  string cert_subject = 6;
  google.protobuf.Timestamp cert_not_before = 7;
  google.protobuf.Timestamp cert_not_after = 8;
  repeated string cert_dns_names = 9;
  int32 cert_key_strength = 10;
  string cert_signature_algorithm = 11;
  repeated string errors = 12;
}

message CrtShCertificate {
  int64 id = 1;
  string common_name = 2;
  string issuer = 3;
  google.protobuf.Timestamp not_before = 4;
  google.protobuf.Timestamp not_after = 5;
  string serial_number = 6;
  repeated string dns_names = 7;
  string signature_algorithm = 8;
}

message CrtShSecurityResult {
  repeated CrtShCertificate certificates = 1;
  repeated string subdomains = 2;
  repeated string errors = 3;
}

message ChaosSecurityResult {
  repeated string subdomains = 1;
  repeated string errors = 2;
}

message ShodanLocation {
  string city = 1;
  string country_name = 2;
  float latitude = 3;  // Changed from double to float
  float longitude = 4; // Changed from double to float
}

message ShodanSSL {
  string issuer = 1;
  string subject = 2;
  google.protobuf.Timestamp expires = 3; // Changed from string to Timestamp
  google.protobuf.Timestamp not_after = 4; // Added to align with plugin
}

message ShodanMetadata {
  string module = 1;
}

message ShodanHost {
  string ip = 1;
  int32 port = 2;
  repeated string hostnames = 3;
  string os = 4;
  string banner = 5;
  repeated string tags = 6;
  ShodanLocation location = 7;
  ShodanSSL ssl = 8;
  repeated string domains = 9;
  string asn = 10;
  string org = 11;
  string isp = 12;
  google.protobuf.Timestamp timestamp = 13; // Changed from string to Timestamp
  ShodanMetadata shodan_meta = 14;
}

message ShodanSecurityResult {
  repeated ShodanHost hosts = 1;
  repeated string errors = 2;
}

message OTXGeneralInfo {
  int32 pulse_count = 1;
  repeated string pulses = 2;
}

message OTXMalware {
  string hash = 1;
  google.protobuf.Timestamp datetime = 2; // Changed from string to Timestamp
}

message OTXURL {
  string url = 1;
  google.protobuf.Timestamp datetime = 2; // Changed from string to Timestamp
}

message OTXPassiveDNS {
  string address = 1;
  string hostname = 2;
  string record = 3;
  google.protobuf.Timestamp datetime = 4; // Changed from string to Timestamp
}

message OTXSecurityResult {
  OTXGeneralInfo general_info = 1;
  repeated OTXMalware malware = 2;
  repeated OTXURL urls = 3;
  repeated OTXPassiveDNS passive_dns = 4;
  repeated string errors = 5;
}

message WhoisSecurityResult {
  string domain = 1;                     // Added to provide context
  string registrar = 2;
  google.protobuf.Timestamp creation_date = 3;
  google.protobuf.Timestamp expiry_date = 4;
  string registrant_name = 5;
  repeated string errors = 6;
}

message AbuseChIOC {
  string ioc_type = 1;
  string ioc_value = 2;
  string threat_type = 3;
  float confidence = 4;                  // Changed from double to float
  google.protobuf.Timestamp first_seen = 5;
  google.protobuf.Timestamp last_seen = 6;
  repeated string malware_alias = 7;
  repeated string tags = 8;
}

message AbuseChSecurityResult {
  repeated AbuseChIOC iocs = 1;
  repeated string errors = 2;
}