// proto/service.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// User-related messages
type CreateUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	mi := &file_proto_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ApiKey        string                 `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	mi := &file_proto_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateUserResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateUserResponse) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type GetUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_proto_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	mi := &file_proto_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetUserResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUserResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_proto_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	mi := &file_proto_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateUserResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	mi := &file_proto_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserResponse) Reset() {
	*x = DeleteUserResponse{}
	mi := &file_proto_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResponse) ProtoMessage() {}

func (x *DeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_proto_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{8}
}

type ListUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_proto_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_proto_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{10}
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type InviteUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviteUserRequest) Reset() {
	*x = InviteUserRequest{}
	mi := &file_proto_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserRequest) ProtoMessage() {}

func (x *InviteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserRequest.ProtoReflect.Descriptor instead.
func (*InviteUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{11}
}

func (x *InviteUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type InviteUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InviteToken   string                 `protobuf:"bytes,1,opt,name=invite_token,json=inviteToken,proto3" json:"invite_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviteUserResponse) Reset() {
	*x = InviteUserResponse{}
	mi := &file_proto_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserResponse) ProtoMessage() {}

func (x *InviteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserResponse.ProtoReflect.Descriptor instead.
func (*InviteUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{12}
}

func (x *InviteUserResponse) GetInviteToken() string {
	if x != nil {
		return x.InviteToken
	}
	return ""
}

type ValidateInviteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateInviteRequest) Reset() {
	*x = ValidateInviteRequest{}
	mi := &file_proto_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateInviteRequest) ProtoMessage() {}

func (x *ValidateInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateInviteRequest.ProtoReflect.Descriptor instead.
func (*ValidateInviteRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{13}
}

func (x *ValidateInviteRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ValidateInviteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateInviteResponse) Reset() {
	*x = ValidateInviteResponse{}
	mi := &file_proto_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateInviteResponse) ProtoMessage() {}

func (x *ValidateInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateInviteResponse.ProtoReflect.Descriptor instead.
func (*ValidateInviteResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{14}
}

func (x *ValidateInviteResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

// DNS Scan Plugin messages
type ScanDomainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanDomainRequest) Reset() {
	*x = ScanDomainRequest{}
	mi := &file_proto_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanDomainRequest) ProtoMessage() {}

func (x *ScanDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanDomainRequest.ProtoReflect.Descriptor instead.
func (*ScanDomainRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{15}
}

func (x *ScanDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type ScanDomainResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *DNSSecurityResult     `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ScanId        string                 `protobuf:"bytes,2,opt,name=scan_id,json=scanId,proto3" json:"scan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanDomainResponse) Reset() {
	*x = ScanDomainResponse{}
	mi := &file_proto_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanDomainResponse) ProtoMessage() {}

func (x *ScanDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanDomainResponse.ProtoReflect.Descriptor instead.
func (*ScanDomainResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{16}
}

func (x *ScanDomainResponse) GetResult() *DNSSecurityResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ScanDomainResponse) GetScanId() string {
	if x != nil {
		return x.ScanId
	}
	return ""
}

type GetDNSScanResultsByDomainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDNSScanResultsByDomainRequest) Reset() {
	*x = GetDNSScanResultsByDomainRequest{}
	mi := &file_proto_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDNSScanResultsByDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDNSScanResultsByDomainRequest) ProtoMessage() {}

func (x *GetDNSScanResultsByDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDNSScanResultsByDomainRequest.ProtoReflect.Descriptor instead.
func (*GetDNSScanResultsByDomainRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetDNSScanResultsByDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type GetDNSScanResultsByDomainResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*DNSScanResult       `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDNSScanResultsByDomainResponse) Reset() {
	*x = GetDNSScanResultsByDomainResponse{}
	mi := &file_proto_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDNSScanResultsByDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDNSScanResultsByDomainResponse) ProtoMessage() {}

func (x *GetDNSScanResultsByDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDNSScanResultsByDomainResponse.ProtoReflect.Descriptor instead.
func (*GetDNSScanResultsByDomainResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetDNSScanResultsByDomainResponse) GetResults() []*DNSScanResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type DNSSecurityResult struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	SpfRecord             string                 `protobuf:"bytes,1,opt,name=spf_record,json=spfRecord,proto3" json:"spf_record,omitempty"`
	SpfValid              bool                   `protobuf:"varint,2,opt,name=spf_valid,json=spfValid,proto3" json:"spf_valid,omitempty"`
	SpfPolicy             string                 `protobuf:"bytes,3,opt,name=spf_policy,json=spfPolicy,proto3" json:"spf_policy,omitempty"`
	DkimRecord            string                 `protobuf:"bytes,4,opt,name=dkim_record,json=dkimRecord,proto3" json:"dkim_record,omitempty"`
	DkimValid             bool                   `protobuf:"varint,5,opt,name=dkim_valid,json=dkimValid,proto3" json:"dkim_valid,omitempty"`
	DkimValidationError   string                 `protobuf:"bytes,6,opt,name=dkim_validation_error,json=dkimValidationError,proto3" json:"dkim_validation_error,omitempty"`
	DmarcRecord           string                 `protobuf:"bytes,7,opt,name=dmarc_record,json=dmarcRecord,proto3" json:"dmarc_record,omitempty"`
	DmarcPolicy           string                 `protobuf:"bytes,8,opt,name=dmarc_policy,json=dmarcPolicy,proto3" json:"dmarc_policy,omitempty"`
	DmarcValid            bool                   `protobuf:"varint,9,opt,name=dmarc_valid,json=dmarcValid,proto3" json:"dmarc_valid,omitempty"`
	DmarcValidationError  string                 `protobuf:"bytes,10,opt,name=dmarc_validation_error,json=dmarcValidationError,proto3" json:"dmarc_validation_error,omitempty"`
	DnssecEnabled         bool                   `protobuf:"varint,11,opt,name=dnssec_enabled,json=dnssecEnabled,proto3" json:"dnssec_enabled,omitempty"`
	DnssecValid           bool                   `protobuf:"varint,12,opt,name=dnssec_valid,json=dnssecValid,proto3" json:"dnssec_valid,omitempty"`
	DnssecValidationError string                 `protobuf:"bytes,13,opt,name=dnssec_validation_error,json=dnssecValidationError,proto3" json:"dnssec_validation_error,omitempty"`
	IpAddresses           []string               `protobuf:"bytes,14,rep,name=ip_addresses,json=ipAddresses,proto3" json:"ip_addresses,omitempty"`
	MxRecords             []string               `protobuf:"bytes,15,rep,name=mx_records,json=mxRecords,proto3" json:"mx_records,omitempty"`
	NsRecords             []string               `protobuf:"bytes,16,rep,name=ns_records,json=nsRecords,proto3" json:"ns_records,omitempty"`
	Errors                []string               `protobuf:"bytes,17,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *DNSSecurityResult) Reset() {
	*x = DNSSecurityResult{}
	mi := &file_proto_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNSSecurityResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSSecurityResult) ProtoMessage() {}

func (x *DNSSecurityResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSSecurityResult.ProtoReflect.Descriptor instead.
func (*DNSSecurityResult) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{19}
}

func (x *DNSSecurityResult) GetSpfRecord() string {
	if x != nil {
		return x.SpfRecord
	}
	return ""
}

func (x *DNSSecurityResult) GetSpfValid() bool {
	if x != nil {
		return x.SpfValid
	}
	return false
}

func (x *DNSSecurityResult) GetSpfPolicy() string {
	if x != nil {
		return x.SpfPolicy
	}
	return ""
}

func (x *DNSSecurityResult) GetDkimRecord() string {
	if x != nil {
		return x.DkimRecord
	}
	return ""
}

func (x *DNSSecurityResult) GetDkimValid() bool {
	if x != nil {
		return x.DkimValid
	}
	return false
}

func (x *DNSSecurityResult) GetDkimValidationError() string {
	if x != nil {
		return x.DkimValidationError
	}
	return ""
}

func (x *DNSSecurityResult) GetDmarcRecord() string {
	if x != nil {
		return x.DmarcRecord
	}
	return ""
}

func (x *DNSSecurityResult) GetDmarcPolicy() string {
	if x != nil {
		return x.DmarcPolicy
	}
	return ""
}

func (x *DNSSecurityResult) GetDmarcValid() bool {
	if x != nil {
		return x.DmarcValid
	}
	return false
}

func (x *DNSSecurityResult) GetDmarcValidationError() string {
	if x != nil {
		return x.DmarcValidationError
	}
	return ""
}

func (x *DNSSecurityResult) GetDnssecEnabled() bool {
	if x != nil {
		return x.DnssecEnabled
	}
	return false
}

func (x *DNSSecurityResult) GetDnssecValid() bool {
	if x != nil {
		return x.DnssecValid
	}
	return false
}

func (x *DNSSecurityResult) GetDnssecValidationError() string {
	if x != nil {
		return x.DnssecValidationError
	}
	return ""
}

func (x *DNSSecurityResult) GetIpAddresses() []string {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

func (x *DNSSecurityResult) GetMxRecords() []string {
	if x != nil {
		return x.MxRecords
	}
	return nil
}

func (x *DNSSecurityResult) GetNsRecords() []string {
	if x != nil {
		return x.NsRecords
	}
	return nil
}

func (x *DNSSecurityResult) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type DNSScanResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Result        *DNSSecurityResult     `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DNSScanResult) Reset() {
	*x = DNSScanResult{}
	mi := &file_proto_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNSScanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSScanResult) ProtoMessage() {}

func (x *DNSScanResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSScanResult.ProtoReflect.Descriptor instead.
func (*DNSScanResult) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{20}
}

func (x *DNSScanResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DNSScanResult) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DNSScanResult) GetResult() *DNSSecurityResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DNSScanResult) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// TLS Scan Plugin messages
type ScanTLSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	DnsScanId     string                 `protobuf:"bytes,2,opt,name=dns_scan_id,json=dnsScanId,proto3" json:"dns_scan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanTLSRequest) Reset() {
	*x = ScanTLSRequest{}
	mi := &file_proto_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanTLSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanTLSRequest) ProtoMessage() {}

func (x *ScanTLSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanTLSRequest.ProtoReflect.Descriptor instead.
func (*ScanTLSRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{21}
}

func (x *ScanTLSRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ScanTLSRequest) GetDnsScanId() string {
	if x != nil {
		return x.DnsScanId
	}
	return ""
}

type ScanTLSResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *TLSSecurityResult     `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ScanId        string                 `protobuf:"bytes,2,opt,name=scan_id,json=scanId,proto3" json:"scan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanTLSResponse) Reset() {
	*x = ScanTLSResponse{}
	mi := &file_proto_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanTLSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanTLSResponse) ProtoMessage() {}

func (x *ScanTLSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanTLSResponse.ProtoReflect.Descriptor instead.
func (*ScanTLSResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{22}
}

func (x *ScanTLSResponse) GetResult() *TLSSecurityResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ScanTLSResponse) GetScanId() string {
	if x != nil {
		return x.ScanId
	}
	return ""
}

type GetTLSScanResultsByDomainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTLSScanResultsByDomainRequest) Reset() {
	*x = GetTLSScanResultsByDomainRequest{}
	mi := &file_proto_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTLSScanResultsByDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTLSScanResultsByDomainRequest) ProtoMessage() {}

func (x *GetTLSScanResultsByDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTLSScanResultsByDomainRequest.ProtoReflect.Descriptor instead.
func (*GetTLSScanResultsByDomainRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetTLSScanResultsByDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type GetTLSScanResultsByDomainResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*TLSScanResult       `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTLSScanResultsByDomainResponse) Reset() {
	*x = GetTLSScanResultsByDomainResponse{}
	mi := &file_proto_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTLSScanResultsByDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTLSScanResultsByDomainResponse) ProtoMessage() {}

func (x *GetTLSScanResultsByDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTLSScanResultsByDomainResponse.ProtoReflect.Descriptor instead.
func (*GetTLSScanResultsByDomainResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetTLSScanResultsByDomainResponse) GetResults() []*TLSScanResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type TLSSecurityResult struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	TlsVersion             string                 `protobuf:"bytes,1,opt,name=tls_version,json=tlsVersion,proto3" json:"tls_version,omitempty"`
	CipherSuite            string                 `protobuf:"bytes,2,opt,name=cipher_suite,json=cipherSuite,proto3" json:"cipher_suite,omitempty"`
	HstsHeader             bool                   `protobuf:"varint,3,opt,name=hsts_header,json=hstsHeader,proto3" json:"hsts_header,omitempty"`
	CertificateValid       bool                   `protobuf:"varint,4,opt,name=certificate_valid,json=certificateValid,proto3" json:"certificate_valid,omitempty"`
	CertIssuer             string                 `protobuf:"bytes,5,opt,name=cert_issuer,json=certIssuer,proto3" json:"cert_issuer,omitempty"`
	CertSubject            string                 `protobuf:"bytes,6,opt,name=cert_subject,json=certSubject,proto3" json:"cert_subject,omitempty"`
	CertNotBefore          string                 `protobuf:"bytes,7,opt,name=cert_not_before,json=certNotBefore,proto3" json:"cert_not_before,omitempty"`
	CertNotAfter           string                 `protobuf:"bytes,8,opt,name=cert_not_after,json=certNotAfter,proto3" json:"cert_not_after,omitempty"`
	CertDnsNames           []string               `protobuf:"bytes,9,rep,name=cert_dns_names,json=certDnsNames,proto3" json:"cert_dns_names,omitempty"`
	CertKeyStrength        int32                  `protobuf:"varint,10,opt,name=cert_key_strength,json=certKeyStrength,proto3" json:"cert_key_strength,omitempty"`
	CertSignatureAlgorithm string                 `protobuf:"bytes,11,opt,name=cert_signature_algorithm,json=certSignatureAlgorithm,proto3" json:"cert_signature_algorithm,omitempty"`
	Errors                 []string               `protobuf:"bytes,12,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TLSSecurityResult) Reset() {
	*x = TLSSecurityResult{}
	mi := &file_proto_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSSecurityResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSSecurityResult) ProtoMessage() {}

func (x *TLSSecurityResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSSecurityResult.ProtoReflect.Descriptor instead.
func (*TLSSecurityResult) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{25}
}

func (x *TLSSecurityResult) GetTlsVersion() string {
	if x != nil {
		return x.TlsVersion
	}
	return ""
}

func (x *TLSSecurityResult) GetCipherSuite() string {
	if x != nil {
		return x.CipherSuite
	}
	return ""
}

func (x *TLSSecurityResult) GetHstsHeader() bool {
	if x != nil {
		return x.HstsHeader
	}
	return false
}

func (x *TLSSecurityResult) GetCertificateValid() bool {
	if x != nil {
		return x.CertificateValid
	}
	return false
}

func (x *TLSSecurityResult) GetCertIssuer() string {
	if x != nil {
		return x.CertIssuer
	}
	return ""
}

func (x *TLSSecurityResult) GetCertSubject() string {
	if x != nil {
		return x.CertSubject
	}
	return ""
}

func (x *TLSSecurityResult) GetCertNotBefore() string {
	if x != nil {
		return x.CertNotBefore
	}
	return ""
}

func (x *TLSSecurityResult) GetCertNotAfter() string {
	if x != nil {
		return x.CertNotAfter
	}
	return ""
}

func (x *TLSSecurityResult) GetCertDnsNames() []string {
	if x != nil {
		return x.CertDnsNames
	}
	return nil
}

func (x *TLSSecurityResult) GetCertKeyStrength() int32 {
	if x != nil {
		return x.CertKeyStrength
	}
	return 0
}

func (x *TLSSecurityResult) GetCertSignatureAlgorithm() string {
	if x != nil {
		return x.CertSignatureAlgorithm
	}
	return ""
}

func (x *TLSSecurityResult) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type TLSScanResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	DnsScanId     string                 `protobuf:"bytes,3,opt,name=dns_scan_id,json=dnsScanId,proto3" json:"dns_scan_id,omitempty"`
	Result        *TLSSecurityResult     `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLSScanResult) Reset() {
	*x = TLSScanResult{}
	mi := &file_proto_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSScanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSScanResult) ProtoMessage() {}

func (x *TLSScanResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSScanResult.ProtoReflect.Descriptor instead.
func (*TLSScanResult) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{26}
}

func (x *TLSScanResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TLSScanResult) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *TLSScanResult) GetDnsScanId() string {
	if x != nil {
		return x.DnsScanId
	}
	return ""
}

func (x *TLSScanResult) GetResult() *TLSSecurityResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TLSScanResult) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// CrtSh Scan Plugin messages
type ScanCrtShRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	DnsScanId     string                 `protobuf:"bytes,2,opt,name=dns_scan_id,json=dnsScanId,proto3" json:"dns_scan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanCrtShRequest) Reset() {
	*x = ScanCrtShRequest{}
	mi := &file_proto_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanCrtShRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanCrtShRequest) ProtoMessage() {}

func (x *ScanCrtShRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanCrtShRequest.ProtoReflect.Descriptor instead.
func (*ScanCrtShRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{27}
}

func (x *ScanCrtShRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ScanCrtShRequest) GetDnsScanId() string {
	if x != nil {
		return x.DnsScanId
	}
	return ""
}

type ScanCrtShResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *CrtShSecurityResult   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ScanId        string                 `protobuf:"bytes,2,opt,name=scan_id,json=scanId,proto3" json:"scan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanCrtShResponse) Reset() {
	*x = ScanCrtShResponse{}
	mi := &file_proto_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanCrtShResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanCrtShResponse) ProtoMessage() {}

func (x *ScanCrtShResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanCrtShResponse.ProtoReflect.Descriptor instead.
func (*ScanCrtShResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{28}
}

func (x *ScanCrtShResponse) GetResult() *CrtShSecurityResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ScanCrtShResponse) GetScanId() string {
	if x != nil {
		return x.ScanId
	}
	return ""
}

type GetCrtShScanResultsByDomainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCrtShScanResultsByDomainRequest) Reset() {
	*x = GetCrtShScanResultsByDomainRequest{}
	mi := &file_proto_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCrtShScanResultsByDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCrtShScanResultsByDomainRequest) ProtoMessage() {}

func (x *GetCrtShScanResultsByDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCrtShScanResultsByDomainRequest.ProtoReflect.Descriptor instead.
func (*GetCrtShScanResultsByDomainRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{29}
}

func (x *GetCrtShScanResultsByDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type GetCrtShScanResultsByDomainResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*CrtShScanResult     `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCrtShScanResultsByDomainResponse) Reset() {
	*x = GetCrtShScanResultsByDomainResponse{}
	mi := &file_proto_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCrtShScanResultsByDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCrtShScanResultsByDomainResponse) ProtoMessage() {}

func (x *GetCrtShScanResultsByDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCrtShScanResultsByDomainResponse.ProtoReflect.Descriptor instead.
func (*GetCrtShScanResultsByDomainResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{30}
}

func (x *GetCrtShScanResultsByDomainResponse) GetResults() []*CrtShScanResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type CrtShCertificate struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CommonName         string                 `protobuf:"bytes,2,opt,name=common_name,json=commonName,proto3" json:"common_name,omitempty"`
	Issuer             string                 `protobuf:"bytes,3,opt,name=issuer,proto3" json:"issuer,omitempty"`
	NotBefore          string                 `protobuf:"bytes,4,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	NotAfter           string                 `protobuf:"bytes,5,opt,name=not_after,json=notAfter,proto3" json:"not_after,omitempty"`
	SerialNumber       string                 `protobuf:"bytes,6,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	DnsNames           []string               `protobuf:"bytes,7,rep,name=dns_names,json=dnsNames,proto3" json:"dns_names,omitempty"`
	SignatureAlgorithm string                 `protobuf:"bytes,8,opt,name=signature_algorithm,json=signatureAlgorithm,proto3" json:"signature_algorithm,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CrtShCertificate) Reset() {
	*x = CrtShCertificate{}
	mi := &file_proto_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrtShCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrtShCertificate) ProtoMessage() {}

func (x *CrtShCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrtShCertificate.ProtoReflect.Descriptor instead.
func (*CrtShCertificate) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{31}
}

func (x *CrtShCertificate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CrtShCertificate) GetCommonName() string {
	if x != nil {
		return x.CommonName
	}
	return ""
}

func (x *CrtShCertificate) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *CrtShCertificate) GetNotBefore() string {
	if x != nil {
		return x.NotBefore
	}
	return ""
}

func (x *CrtShCertificate) GetNotAfter() string {
	if x != nil {
		return x.NotAfter
	}
	return ""
}

func (x *CrtShCertificate) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *CrtShCertificate) GetDnsNames() []string {
	if x != nil {
		return x.DnsNames
	}
	return nil
}

func (x *CrtShCertificate) GetSignatureAlgorithm() string {
	if x != nil {
		return x.SignatureAlgorithm
	}
	return ""
}

type CrtShSecurityResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Certificates  []*CrtShCertificate    `protobuf:"bytes,1,rep,name=certificates,proto3" json:"certificates,omitempty"`
	Subdomains    []string               `protobuf:"bytes,2,rep,name=subdomains,proto3" json:"subdomains,omitempty"`
	Errors        []string               `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CrtShSecurityResult) Reset() {
	*x = CrtShSecurityResult{}
	mi := &file_proto_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrtShSecurityResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrtShSecurityResult) ProtoMessage() {}

func (x *CrtShSecurityResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrtShSecurityResult.ProtoReflect.Descriptor instead.
func (*CrtShSecurityResult) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{32}
}

func (x *CrtShSecurityResult) GetCertificates() []*CrtShCertificate {
	if x != nil {
		return x.Certificates
	}
	return nil
}

func (x *CrtShSecurityResult) GetSubdomains() []string {
	if x != nil {
		return x.Subdomains
	}
	return nil
}

func (x *CrtShSecurityResult) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CrtShScanResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	DnsScanId     string                 `protobuf:"bytes,3,opt,name=dns_scan_id,json=dnsScanId,proto3" json:"dns_scan_id,omitempty"`
	Result        *CrtShSecurityResult   `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CrtShScanResult) Reset() {
	*x = CrtShScanResult{}
	mi := &file_proto_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrtShScanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrtShScanResult) ProtoMessage() {}

func (x *CrtShScanResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrtShScanResult.ProtoReflect.Descriptor instead.
func (*CrtShScanResult) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{33}
}

func (x *CrtShScanResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CrtShScanResult) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CrtShScanResult) GetDnsScanId() string {
	if x != nil {
		return x.DnsScanId
	}
	return ""
}

func (x *CrtShScanResult) GetResult() *CrtShSecurityResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CrtShScanResult) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// Chaos Scan Plugin messages
type ScanChaosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	DnsScanId     string                 `protobuf:"bytes,2,opt,name=dns_scan_id,json=dnsScanId,proto3" json:"dns_scan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanChaosRequest) Reset() {
	*x = ScanChaosRequest{}
	mi := &file_proto_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanChaosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanChaosRequest) ProtoMessage() {}

func (x *ScanChaosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanChaosRequest.ProtoReflect.Descriptor instead.
func (*ScanChaosRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{34}
}

func (x *ScanChaosRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ScanChaosRequest) GetDnsScanId() string {
	if x != nil {
		return x.DnsScanId
	}
	return ""
}

type ScanChaosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *ChaosSecurityResult   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ScanId        string                 `protobuf:"bytes,2,opt,name=scan_id,json=scanId,proto3" json:"scan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanChaosResponse) Reset() {
	*x = ScanChaosResponse{}
	mi := &file_proto_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanChaosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanChaosResponse) ProtoMessage() {}

func (x *ScanChaosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanChaosResponse.ProtoReflect.Descriptor instead.
func (*ScanChaosResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{35}
}

func (x *ScanChaosResponse) GetResult() *ChaosSecurityResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ScanChaosResponse) GetScanId() string {
	if x != nil {
		return x.ScanId
	}
	return ""
}

type GetChaosScanResultsByDomainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChaosScanResultsByDomainRequest) Reset() {
	*x = GetChaosScanResultsByDomainRequest{}
	mi := &file_proto_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChaosScanResultsByDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChaosScanResultsByDomainRequest) ProtoMessage() {}

func (x *GetChaosScanResultsByDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChaosScanResultsByDomainRequest.ProtoReflect.Descriptor instead.
func (*GetChaosScanResultsByDomainRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{36}
}

func (x *GetChaosScanResultsByDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type GetChaosScanResultsByDomainResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*ChaosScanResult     `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChaosScanResultsByDomainResponse) Reset() {
	*x = GetChaosScanResultsByDomainResponse{}
	mi := &file_proto_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChaosScanResultsByDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChaosScanResultsByDomainResponse) ProtoMessage() {}

func (x *GetChaosScanResultsByDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChaosScanResultsByDomainResponse.ProtoReflect.Descriptor instead.
func (*GetChaosScanResultsByDomainResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{37}
}

func (x *GetChaosScanResultsByDomainResponse) GetResults() []*ChaosScanResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type ChaosSecurityResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subdomains    []string               `protobuf:"bytes,1,rep,name=subdomains,proto3" json:"subdomains,omitempty"`
	Errors        []string               `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChaosSecurityResult) Reset() {
	*x = ChaosSecurityResult{}
	mi := &file_proto_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChaosSecurityResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChaosSecurityResult) ProtoMessage() {}

func (x *ChaosSecurityResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChaosSecurityResult.ProtoReflect.Descriptor instead.
func (*ChaosSecurityResult) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{38}
}

func (x *ChaosSecurityResult) GetSubdomains() []string {
	if x != nil {
		return x.Subdomains
	}
	return nil
}

func (x *ChaosSecurityResult) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type ChaosScanResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	DnsScanId     string                 `protobuf:"bytes,3,opt,name=dns_scan_id,json=dnsScanId,proto3" json:"dns_scan_id,omitempty"`
	Result        *ChaosSecurityResult   `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChaosScanResult) Reset() {
	*x = ChaosScanResult{}
	mi := &file_proto_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChaosScanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChaosScanResult) ProtoMessage() {}

func (x *ChaosScanResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChaosScanResult.ProtoReflect.Descriptor instead.
func (*ChaosScanResult) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{39}
}

func (x *ChaosScanResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChaosScanResult) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ChaosScanResult) GetDnsScanId() string {
	if x != nil {
		return x.DnsScanId
	}
	return ""
}

func (x *ChaosScanResult) GetResult() *ChaosSecurityResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ChaosScanResult) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// Shodan Scan Plugin messages
type ScanShodanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	DnsScanId     string                 `protobuf:"bytes,2,opt,name=dns_scan_id,json=dnsScanId,proto3" json:"dns_scan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanShodanRequest) Reset() {
	*x = ScanShodanRequest{}
	mi := &file_proto_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanShodanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanShodanRequest) ProtoMessage() {}

func (x *ScanShodanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanShodanRequest.ProtoReflect.Descriptor instead.
func (*ScanShodanRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{40}
}

func (x *ScanShodanRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ScanShodanRequest) GetDnsScanId() string {
	if x != nil {
		return x.DnsScanId
	}
	return ""
}

type ScanShodanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *ShodanSecurityResult  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ScanId        string                 `protobuf:"bytes,2,opt,name=scan_id,json=scanId,proto3" json:"scan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanShodanResponse) Reset() {
	*x = ScanShodanResponse{}
	mi := &file_proto_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanShodanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanShodanResponse) ProtoMessage() {}

func (x *ScanShodanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanShodanResponse.ProtoReflect.Descriptor instead.
func (*ScanShodanResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{41}
}

func (x *ScanShodanResponse) GetResult() *ShodanSecurityResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ScanShodanResponse) GetScanId() string {
	if x != nil {
		return x.ScanId
	}
	return ""
}

type GetShodanScanResultsByDomainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShodanScanResultsByDomainRequest) Reset() {
	*x = GetShodanScanResultsByDomainRequest{}
	mi := &file_proto_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShodanScanResultsByDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShodanScanResultsByDomainRequest) ProtoMessage() {}

func (x *GetShodanScanResultsByDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShodanScanResultsByDomainRequest.ProtoReflect.Descriptor instead.
func (*GetShodanScanResultsByDomainRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{42}
}

func (x *GetShodanScanResultsByDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type GetShodanScanResultsByDomainResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*ShodanScanResult    `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShodanScanResultsByDomainResponse) Reset() {
	*x = GetShodanScanResultsByDomainResponse{}
	mi := &file_proto_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShodanScanResultsByDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShodanScanResultsByDomainResponse) ProtoMessage() {}

func (x *GetShodanScanResultsByDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShodanScanResultsByDomainResponse.ProtoReflect.Descriptor instead.
func (*GetShodanScanResultsByDomainResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{43}
}

func (x *GetShodanScanResultsByDomainResponse) GetResults() []*ShodanScanResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type ShodanLocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	City          string                 `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	CountryName   string                 `protobuf:"bytes,2,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
	Latitude      float64                `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShodanLocation) Reset() {
	*x = ShodanLocation{}
	mi := &file_proto_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShodanLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShodanLocation) ProtoMessage() {}

func (x *ShodanLocation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShodanLocation.ProtoReflect.Descriptor instead.
func (*ShodanLocation) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{44}
}

func (x *ShodanLocation) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ShodanLocation) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *ShodanLocation) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *ShodanLocation) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type ShodanSSL struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Issuer        string                 `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Subject       string                 `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Expires       string                 `protobuf:"bytes,3,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShodanSSL) Reset() {
	*x = ShodanSSL{}
	mi := &file_proto_service_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShodanSSL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShodanSSL) ProtoMessage() {}

func (x *ShodanSSL) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShodanSSL.ProtoReflect.Descriptor instead.
func (*ShodanSSL) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{45}
}

func (x *ShodanSSL) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *ShodanSSL) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *ShodanSSL) GetExpires() string {
	if x != nil {
		return x.Expires
	}
	return ""
}

type ShodanMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Module        string                 `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShodanMetadata) Reset() {
	*x = ShodanMetadata{}
	mi := &file_proto_service_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShodanMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShodanMetadata) ProtoMessage() {}

func (x *ShodanMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShodanMetadata.ProtoReflect.Descriptor instead.
func (*ShodanMetadata) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{46}
}

func (x *ShodanMetadata) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

type ShodanHost struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Hostnames     []string               `protobuf:"bytes,3,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	Os            string                 `protobuf:"bytes,4,opt,name=os,proto3" json:"os,omitempty"`
	Banner        string                 `protobuf:"bytes,5,opt,name=banner,proto3" json:"banner,omitempty"`
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	Location      *ShodanLocation        `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	Ssl           *ShodanSSL             `protobuf:"bytes,8,opt,name=ssl,proto3" json:"ssl,omitempty"`
	Domains       []string               `protobuf:"bytes,9,rep,name=domains,proto3" json:"domains,omitempty"`
	Asn           string                 `protobuf:"bytes,10,opt,name=asn,proto3" json:"asn,omitempty"`
	Org           string                 `protobuf:"bytes,11,opt,name=org,proto3" json:"org,omitempty"`
	Isp           string                 `protobuf:"bytes,12,opt,name=isp,proto3" json:"isp,omitempty"`
	Timestamp     string                 `protobuf:"bytes,13,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ShodanMeta    *ShodanMetadata        `protobuf:"bytes,14,opt,name=shodan_meta,json=shodanMeta,proto3" json:"shodan_meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShodanHost) Reset() {
	*x = ShodanHost{}
	mi := &file_proto_service_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShodanHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShodanHost) ProtoMessage() {}

func (x *ShodanHost) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShodanHost.ProtoReflect.Descriptor instead.
func (*ShodanHost) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{47}
}

func (x *ShodanHost) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ShodanHost) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ShodanHost) GetHostnames() []string {
	if x != nil {
		return x.Hostnames
	}
	return nil
}

func (x *ShodanHost) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *ShodanHost) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *ShodanHost) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ShodanHost) GetLocation() *ShodanLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ShodanHost) GetSsl() *ShodanSSL {
	if x != nil {
		return x.Ssl
	}
	return nil
}

func (x *ShodanHost) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *ShodanHost) GetAsn() string {
	if x != nil {
		return x.Asn
	}
	return ""
}

func (x *ShodanHost) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

func (x *ShodanHost) GetIsp() string {
	if x != nil {
		return x.Isp
	}
	return ""
}

func (x *ShodanHost) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *ShodanHost) GetShodanMeta() *ShodanMetadata {
	if x != nil {
		return x.ShodanMeta
	}
	return nil
}

type ShodanSecurityResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hosts         []*ShodanHost          `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	Errors        []string               `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShodanSecurityResult) Reset() {
	*x = ShodanSecurityResult{}
	mi := &file_proto_service_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShodanSecurityResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShodanSecurityResult) ProtoMessage() {}

func (x *ShodanSecurityResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShodanSecurityResult.ProtoReflect.Descriptor instead.
func (*ShodanSecurityResult) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{48}
}

func (x *ShodanSecurityResult) GetHosts() []*ShodanHost {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *ShodanSecurityResult) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type ShodanScanResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	DnsScanId     string                 `protobuf:"bytes,3,opt,name=dns_scan_id,json=dnsScanId,proto3" json:"dns_scan_id,omitempty"`
	Result        *ShodanSecurityResult  `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShodanScanResult) Reset() {
	*x = ShodanScanResult{}
	mi := &file_proto_service_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShodanScanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShodanScanResult) ProtoMessage() {}

func (x *ShodanScanResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShodanScanResult.ProtoReflect.Descriptor instead.
func (*ShodanScanResult) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{49}
}

func (x *ShodanScanResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShodanScanResult) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ShodanScanResult) GetDnsScanId() string {
	if x != nil {
		return x.DnsScanId
	}
	return ""
}

func (x *ShodanScanResult) GetResult() *ShodanSecurityResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ShodanScanResult) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// OTX Scan Plugin messages
type ScanOTXRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	DnsScanId     string                 `protobuf:"bytes,2,opt,name=dns_scan_id,json=dnsScanId,proto3" json:"dns_scan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanOTXRequest) Reset() {
	*x = ScanOTXRequest{}
	mi := &file_proto_service_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanOTXRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanOTXRequest) ProtoMessage() {}

func (x *ScanOTXRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanOTXRequest.ProtoReflect.Descriptor instead.
func (*ScanOTXRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{50}
}

func (x *ScanOTXRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ScanOTXRequest) GetDnsScanId() string {
	if x != nil {
		return x.DnsScanId
	}
	return ""
}

type ScanOTXResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *OTXSecurityResult     `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ScanId        string                 `protobuf:"bytes,2,opt,name=scan_id,json=scanId,proto3" json:"scan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanOTXResponse) Reset() {
	*x = ScanOTXResponse{}
	mi := &file_proto_service_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanOTXResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanOTXResponse) ProtoMessage() {}

func (x *ScanOTXResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanOTXResponse.ProtoReflect.Descriptor instead.
func (*ScanOTXResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{51}
}

func (x *ScanOTXResponse) GetResult() *OTXSecurityResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ScanOTXResponse) GetScanId() string {
	if x != nil {
		return x.ScanId
	}
	return ""
}

type GetOTXScanResultsByDomainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOTXScanResultsByDomainRequest) Reset() {
	*x = GetOTXScanResultsByDomainRequest{}
	mi := &file_proto_service_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOTXScanResultsByDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOTXScanResultsByDomainRequest) ProtoMessage() {}

func (x *GetOTXScanResultsByDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOTXScanResultsByDomainRequest.ProtoReflect.Descriptor instead.
func (*GetOTXScanResultsByDomainRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{52}
}

func (x *GetOTXScanResultsByDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type GetOTXScanResultsByDomainResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*OTXScanResult       `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOTXScanResultsByDomainResponse) Reset() {
	*x = GetOTXScanResultsByDomainResponse{}
	mi := &file_proto_service_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOTXScanResultsByDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOTXScanResultsByDomainResponse) ProtoMessage() {}

func (x *GetOTXScanResultsByDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOTXScanResultsByDomainResponse.ProtoReflect.Descriptor instead.
func (*GetOTXScanResultsByDomainResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{53}
}

func (x *GetOTXScanResultsByDomainResponse) GetResults() []*OTXScanResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type OTXGeneralInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PulseCount    int32                  `protobuf:"varint,1,opt,name=pulse_count,json=pulseCount,proto3" json:"pulse_count,omitempty"`
	Pulses        []string               `protobuf:"bytes,2,rep,name=pulses,proto3" json:"pulses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OTXGeneralInfo) Reset() {
	*x = OTXGeneralInfo{}
	mi := &file_proto_service_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OTXGeneralInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTXGeneralInfo) ProtoMessage() {}

func (x *OTXGeneralInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTXGeneralInfo.ProtoReflect.Descriptor instead.
func (*OTXGeneralInfo) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{54}
}

func (x *OTXGeneralInfo) GetPulseCount() int32 {
	if x != nil {
		return x.PulseCount
	}
	return 0
}

func (x *OTXGeneralInfo) GetPulses() []string {
	if x != nil {
		return x.Pulses
	}
	return nil
}

type OTXMalware struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Datetime      string                 `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OTXMalware) Reset() {
	*x = OTXMalware{}
	mi := &file_proto_service_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OTXMalware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTXMalware) ProtoMessage() {}

func (x *OTXMalware) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTXMalware.ProtoReflect.Descriptor instead.
func (*OTXMalware) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{55}
}

func (x *OTXMalware) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *OTXMalware) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

type OTXURL struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Datetime      string                 `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OTXURL) Reset() {
	*x = OTXURL{}
	mi := &file_proto_service_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OTXURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTXURL) ProtoMessage() {}

func (x *OTXURL) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTXURL.ProtoReflect.Descriptor instead.
func (*OTXURL) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{56}
}

func (x *OTXURL) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *OTXURL) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

type OTXPassiveDNS struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Record        string                 `protobuf:"bytes,3,opt,name=record,proto3" json:"record,omitempty"`
	Datetime      string                 `protobuf:"bytes,4,opt,name=datetime,proto3" json:"datetime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OTXPassiveDNS) Reset() {
	*x = OTXPassiveDNS{}
	mi := &file_proto_service_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OTXPassiveDNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTXPassiveDNS) ProtoMessage() {}

func (x *OTXPassiveDNS) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTXPassiveDNS.ProtoReflect.Descriptor instead.
func (*OTXPassiveDNS) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{57}
}

func (x *OTXPassiveDNS) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *OTXPassiveDNS) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *OTXPassiveDNS) GetRecord() string {
	if x != nil {
		return x.Record
	}
	return ""
}

func (x *OTXPassiveDNS) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

type OTXSecurityResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GeneralInfo   *OTXGeneralInfo        `protobuf:"bytes,1,opt,name=general_info,json=generalInfo,proto3" json:"general_info,omitempty"`
	Malware       []*OTXMalware          `protobuf:"bytes,2,rep,name=malware,proto3" json:"malware,omitempty"`
	Urls          []*OTXURL              `protobuf:"bytes,3,rep,name=urls,proto3" json:"urls,omitempty"`
	PassiveDns    []*OTXPassiveDNS       `protobuf:"bytes,4,rep,name=passive_dns,json=passiveDns,proto3" json:"passive_dns,omitempty"`
	Errors        []string               `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OTXSecurityResult) Reset() {
	*x = OTXSecurityResult{}
	mi := &file_proto_service_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OTXSecurityResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTXSecurityResult) ProtoMessage() {}

func (x *OTXSecurityResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTXSecurityResult.ProtoReflect.Descriptor instead.
func (*OTXSecurityResult) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{58}
}

func (x *OTXSecurityResult) GetGeneralInfo() *OTXGeneralInfo {
	if x != nil {
		return x.GeneralInfo
	}
	return nil
}

func (x *OTXSecurityResult) GetMalware() []*OTXMalware {
	if x != nil {
		return x.Malware
	}
	return nil
}

func (x *OTXSecurityResult) GetUrls() []*OTXURL {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *OTXSecurityResult) GetPassiveDns() []*OTXPassiveDNS {
	if x != nil {
		return x.PassiveDns
	}
	return nil
}

func (x *OTXSecurityResult) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type OTXScanResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	DnsScanId     string                 `protobuf:"bytes,3,opt,name=dns_scan_id,json=dnsScanId,proto3" json:"dns_scan_id,omitempty"`
	Result        *OTXSecurityResult     `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OTXScanResult) Reset() {
	*x = OTXScanResult{}
	mi := &file_proto_service_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OTXScanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTXScanResult) ProtoMessage() {}

func (x *OTXScanResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTXScanResult.ProtoReflect.Descriptor instead.
func (*OTXScanResult) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{59}
}

func (x *OTXScanResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OTXScanResult) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *OTXScanResult) GetDnsScanId() string {
	if x != nil {
		return x.DnsScanId
	}
	return ""
}

func (x *OTXScanResult) GetResult() *OTXSecurityResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *OTXScanResult) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

var File_proto_service_proto protoreflect.FileDescriptor

const file_proto_service_proto_rawDesc = "" +
	"\n" +
	"\x13proto/service.proto\x12\aservice\"=\n" +
	"\x11CreateUserRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"F\n" +
	"\x12CreateUserResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x17\n" +
	"\aapi_key\x18\x02 \x01(\tR\x06apiKey\")\n" +
	"\x0eGetUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"s\n" +
	"\x0fGetUserResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\"V\n" +
	"\x11UpdateUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"-\n" +
	"\x12UpdateUserResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\",\n" +
	"\x11DeleteUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\".\n" +
	"\x12DeleteUserResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x12\n" +
	"\x10ListUsersRequest\"8\n" +
	"\x11ListUsersResponse\x12#\n" +
	"\x05users\x18\x01 \x03(\v2\r.service.UserR\x05users\"h\n" +
	"\x04User\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\")\n" +
	"\x11InviteUserRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\"7\n" +
	"\x12InviteUserResponse\x12!\n" +
	"\finvite_token\x18\x01 \x01(\tR\vinviteToken\"-\n" +
	"\x15ValidateInviteRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\".\n" +
	"\x16ValidateInviteResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\"+\n" +
	"\x11ScanDomainRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\"a\n" +
	"\x12ScanDomainResponse\x122\n" +
	"\x06result\x18\x01 \x01(\v2\x1a.service.DNSSecurityResultR\x06result\x12\x17\n" +
	"\ascan_id\x18\x02 \x01(\tR\x06scanId\":\n" +
	" GetDNSScanResultsByDomainRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\"U\n" +
	"!GetDNSScanResultsByDomainResponse\x120\n" +
	"\aresults\x18\x01 \x03(\v2\x16.service.DNSScanResultR\aresults\"\xfa\x04\n" +
	"\x11DNSSecurityResult\x12\x1d\n" +
	"\n" +
	"spf_record\x18\x01 \x01(\tR\tspfRecord\x12\x1b\n" +
	"\tspf_valid\x18\x02 \x01(\bR\bspfValid\x12\x1d\n" +
	"\n" +
	"spf_policy\x18\x03 \x01(\tR\tspfPolicy\x12\x1f\n" +
	"\vdkim_record\x18\x04 \x01(\tR\n" +
	"dkimRecord\x12\x1d\n" +
	"\n" +
	"dkim_valid\x18\x05 \x01(\bR\tdkimValid\x122\n" +
	"\x15dkim_validation_error\x18\x06 \x01(\tR\x13dkimValidationError\x12!\n" +
	"\fdmarc_record\x18\a \x01(\tR\vdmarcRecord\x12!\n" +
	"\fdmarc_policy\x18\b \x01(\tR\vdmarcPolicy\x12\x1f\n" +
	"\vdmarc_valid\x18\t \x01(\bR\n" +
	"dmarcValid\x124\n" +
	"\x16dmarc_validation_error\x18\n" +
	" \x01(\tR\x14dmarcValidationError\x12%\n" +
	"\x0ednssec_enabled\x18\v \x01(\bR\rdnssecEnabled\x12!\n" +
	"\fdnssec_valid\x18\f \x01(\bR\vdnssecValid\x126\n" +
	"\x17dnssec_validation_error\x18\r \x01(\tR\x15dnssecValidationError\x12!\n" +
	"\fip_addresses\x18\x0e \x03(\tR\vipAddresses\x12\x1d\n" +
	"\n" +
	"mx_records\x18\x0f \x03(\tR\tmxRecords\x12\x1d\n" +
	"\n" +
	"ns_records\x18\x10 \x03(\tR\tnsRecords\x12\x16\n" +
	"\x06errors\x18\x11 \x03(\tR\x06errors\"\x8a\x01\n" +
	"\rDNSScanResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\x122\n" +
	"\x06result\x18\x03 \x01(\v2\x1a.service.DNSSecurityResultR\x06result\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\"H\n" +
	"\x0eScanTLSRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\x12\x1e\n" +
	"\vdns_scan_id\x18\x02 \x01(\tR\tdnsScanId\"^\n" +
	"\x0fScanTLSResponse\x122\n" +
	"\x06result\x18\x01 \x01(\v2\x1a.service.TLSSecurityResultR\x06result\x12\x17\n" +
	"\ascan_id\x18\x02 \x01(\tR\x06scanId\":\n" +
	" GetTLSScanResultsByDomainRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\"U\n" +
	"!GetTLSScanResultsByDomainResponse\x120\n" +
	"\aresults\x18\x01 \x03(\v2\x16.service.TLSScanResultR\aresults\"\xdb\x03\n" +
	"\x11TLSSecurityResult\x12\x1f\n" +
	"\vtls_version\x18\x01 \x01(\tR\n" +
	"tlsVersion\x12!\n" +
	"\fcipher_suite\x18\x02 \x01(\tR\vcipherSuite\x12\x1f\n" +
	"\vhsts_header\x18\x03 \x01(\bR\n" +
	"hstsHeader\x12+\n" +
	"\x11certificate_valid\x18\x04 \x01(\bR\x10certificateValid\x12\x1f\n" +
	"\vcert_issuer\x18\x05 \x01(\tR\n" +
	"certIssuer\x12!\n" +
	"\fcert_subject\x18\x06 \x01(\tR\vcertSubject\x12&\n" +
	"\x0fcert_not_before\x18\a \x01(\tR\rcertNotBefore\x12$\n" +
	"\x0ecert_not_after\x18\b \x01(\tR\fcertNotAfter\x12$\n" +
	"\x0ecert_dns_names\x18\t \x03(\tR\fcertDnsNames\x12*\n" +
	"\x11cert_key_strength\x18\n" +
	" \x01(\x05R\x0fcertKeyStrength\x128\n" +
	"\x18cert_signature_algorithm\x18\v \x01(\tR\x16certSignatureAlgorithm\x12\x16\n" +
	"\x06errors\x18\f \x03(\tR\x06errors\"\xaa\x01\n" +
	"\rTLSScanResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\x12\x1e\n" +
	"\vdns_scan_id\x18\x03 \x01(\tR\tdnsScanId\x122\n" +
	"\x06result\x18\x04 \x01(\v2\x1a.service.TLSSecurityResultR\x06result\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\"J\n" +
	"\x10ScanCrtShRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\x12\x1e\n" +
	"\vdns_scan_id\x18\x02 \x01(\tR\tdnsScanId\"b\n" +
	"\x11ScanCrtShResponse\x124\n" +
	"\x06result\x18\x01 \x01(\v2\x1c.service.CrtShSecurityResultR\x06result\x12\x17\n" +
	"\ascan_id\x18\x02 \x01(\tR\x06scanId\"<\n" +
	"\"GetCrtShScanResultsByDomainRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\"Y\n" +
	"#GetCrtShScanResultsByDomainResponse\x122\n" +
	"\aresults\x18\x01 \x03(\v2\x18.service.CrtShScanResultR\aresults\"\x8a\x02\n" +
	"\x10CrtShCertificate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1f\n" +
	"\vcommon_name\x18\x02 \x01(\tR\n" +
	"commonName\x12\x16\n" +
	"\x06issuer\x18\x03 \x01(\tR\x06issuer\x12\x1d\n" +
	"\n" +
	"not_before\x18\x04 \x01(\tR\tnotBefore\x12\x1b\n" +
	"\tnot_after\x18\x05 \x01(\tR\bnotAfter\x12#\n" +
	"\rserial_number\x18\x06 \x01(\tR\fserialNumber\x12\x1b\n" +
	"\tdns_names\x18\a \x03(\tR\bdnsNames\x12/\n" +
	"\x13signature_algorithm\x18\b \x01(\tR\x12signatureAlgorithm\"\x8c\x01\n" +
	"\x13CrtShSecurityResult\x12=\n" +
	"\fcertificates\x18\x01 \x03(\v2\x19.service.CrtShCertificateR\fcertificates\x12\x1e\n" +
	"\n" +
	"subdomains\x18\x02 \x03(\tR\n" +
	"subdomains\x12\x16\n" +
	"\x06errors\x18\x03 \x03(\tR\x06errors\"\xae\x01\n" +
	"\x0fCrtShScanResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\x12\x1e\n" +
	"\vdns_scan_id\x18\x03 \x01(\tR\tdnsScanId\x124\n" +
	"\x06result\x18\x04 \x01(\v2\x1c.service.CrtShSecurityResultR\x06result\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\"J\n" +
	"\x10ScanChaosRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\x12\x1e\n" +
	"\vdns_scan_id\x18\x02 \x01(\tR\tdnsScanId\"b\n" +
	"\x11ScanChaosResponse\x124\n" +
	"\x06result\x18\x01 \x01(\v2\x1c.service.ChaosSecurityResultR\x06result\x12\x17\n" +
	"\ascan_id\x18\x02 \x01(\tR\x06scanId\"<\n" +
	"\"GetChaosScanResultsByDomainRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\"Y\n" +
	"#GetChaosScanResultsByDomainResponse\x122\n" +
	"\aresults\x18\x01 \x03(\v2\x18.service.ChaosScanResultR\aresults\"M\n" +
	"\x13ChaosSecurityResult\x12\x1e\n" +
	"\n" +
	"subdomains\x18\x01 \x03(\tR\n" +
	"subdomains\x12\x16\n" +
	"\x06errors\x18\x02 \x03(\tR\x06errors\"\xae\x01\n" +
	"\x0fChaosScanResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\x12\x1e\n" +
	"\vdns_scan_id\x18\x03 \x01(\tR\tdnsScanId\x124\n" +
	"\x06result\x18\x04 \x01(\v2\x1c.service.ChaosSecurityResultR\x06result\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\"K\n" +
	"\x11ScanShodanRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\x12\x1e\n" +
	"\vdns_scan_id\x18\x02 \x01(\tR\tdnsScanId\"d\n" +
	"\x12ScanShodanResponse\x125\n" +
	"\x06result\x18\x01 \x01(\v2\x1d.service.ShodanSecurityResultR\x06result\x12\x17\n" +
	"\ascan_id\x18\x02 \x01(\tR\x06scanId\"=\n" +
	"#GetShodanScanResultsByDomainRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\"[\n" +
	"$GetShodanScanResultsByDomainResponse\x123\n" +
	"\aresults\x18\x01 \x03(\v2\x19.service.ShodanScanResultR\aresults\"\x81\x01\n" +
	"\x0eShodanLocation\x12\x12\n" +
	"\x04city\x18\x01 \x01(\tR\x04city\x12!\n" +
	"\fcountry_name\x18\x02 \x01(\tR\vcountryName\x12\x1a\n" +
	"\blatitude\x18\x03 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x04 \x01(\x01R\tlongitude\"W\n" +
	"\tShodanSSL\x12\x16\n" +
	"\x06issuer\x18\x01 \x01(\tR\x06issuer\x12\x18\n" +
	"\asubject\x18\x02 \x01(\tR\asubject\x12\x18\n" +
	"\aexpires\x18\x03 \x01(\tR\aexpires\"(\n" +
	"\x0eShodanMetadata\x12\x16\n" +
	"\x06module\x18\x01 \x01(\tR\x06module\"\x8d\x03\n" +
	"\n" +
	"ShodanHost\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x1c\n" +
	"\thostnames\x18\x03 \x03(\tR\thostnames\x12\x0e\n" +
	"\x02os\x18\x04 \x01(\tR\x02os\x12\x16\n" +
	"\x06banner\x18\x05 \x01(\tR\x06banner\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\x123\n" +
	"\blocation\x18\a \x01(\v2\x17.service.ShodanLocationR\blocation\x12$\n" +
	"\x03ssl\x18\b \x01(\v2\x12.service.ShodanSSLR\x03ssl\x12\x18\n" +
	"\adomains\x18\t \x03(\tR\adomains\x12\x10\n" +
	"\x03asn\x18\n" +
	" \x01(\tR\x03asn\x12\x10\n" +
	"\x03org\x18\v \x01(\tR\x03org\x12\x10\n" +
	"\x03isp\x18\f \x01(\tR\x03isp\x12\x1c\n" +
	"\ttimestamp\x18\r \x01(\tR\ttimestamp\x128\n" +
	"\vshodan_meta\x18\x0e \x01(\v2\x17.service.ShodanMetadataR\n" +
	"shodanMeta\"Y\n" +
	"\x14ShodanSecurityResult\x12)\n" +
	"\x05hosts\x18\x01 \x03(\v2\x13.service.ShodanHostR\x05hosts\x12\x16\n" +
	"\x06errors\x18\x02 \x03(\tR\x06errors\"\xb0\x01\n" +
	"\x10ShodanScanResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\x12\x1e\n" +
	"\vdns_scan_id\x18\x03 \x01(\tR\tdnsScanId\x125\n" +
	"\x06result\x18\x04 \x01(\v2\x1d.service.ShodanSecurityResultR\x06result\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\"H\n" +
	"\x0eScanOTXRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\x12\x1e\n" +
	"\vdns_scan_id\x18\x02 \x01(\tR\tdnsScanId\"^\n" +
	"\x0fScanOTXResponse\x122\n" +
	"\x06result\x18\x01 \x01(\v2\x1a.service.OTXSecurityResultR\x06result\x12\x17\n" +
	"\ascan_id\x18\x02 \x01(\tR\x06scanId\":\n" +
	" GetOTXScanResultsByDomainRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\"U\n" +
	"!GetOTXScanResultsByDomainResponse\x120\n" +
	"\aresults\x18\x01 \x03(\v2\x16.service.OTXScanResultR\aresults\"I\n" +
	"\x0eOTXGeneralInfo\x12\x1f\n" +
	"\vpulse_count\x18\x01 \x01(\x05R\n" +
	"pulseCount\x12\x16\n" +
	"\x06pulses\x18\x02 \x03(\tR\x06pulses\"<\n" +
	"\n" +
	"OTXMalware\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\tR\x04hash\x12\x1a\n" +
	"\bdatetime\x18\x02 \x01(\tR\bdatetime\"6\n" +
	"\x06OTXURL\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x1a\n" +
	"\bdatetime\x18\x02 \x01(\tR\bdatetime\"y\n" +
	"\rOTXPassiveDNS\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x16\n" +
	"\x06record\x18\x03 \x01(\tR\x06record\x12\x1a\n" +
	"\bdatetime\x18\x04 \x01(\tR\bdatetime\"\xf4\x01\n" +
	"\x11OTXSecurityResult\x12:\n" +
	"\fgeneral_info\x18\x01 \x01(\v2\x17.service.OTXGeneralInfoR\vgeneralInfo\x12-\n" +
	"\amalware\x18\x02 \x03(\v2\x13.service.OTXMalwareR\amalware\x12#\n" +
	"\x04urls\x18\x03 \x03(\v2\x0f.service.OTXURLR\x04urls\x127\n" +
	"\vpassive_dns\x18\x04 \x03(\v2\x16.service.OTXPassiveDNSR\n" +
	"passiveDns\x12\x16\n" +
	"\x06errors\x18\x05 \x03(\tR\x06errors\"\xaa\x01\n" +
	"\rOTXScanResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\x12\x1e\n" +
	"\vdns_scan_id\x18\x03 \x01(\tR\tdnsScanId\x122\n" +
	"\x06result\x18\x04 \x01(\v2\x1a.service.OTXSecurityResultR\x06result\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt2\xdd\f\n" +
	"\vUserService\x12E\n" +
	"\n" +
	"CreateUser\x12\x1a.service.CreateUserRequest\x1a\x1b.service.CreateUserResponse\x12<\n" +
	"\aGetUser\x12\x17.service.GetUserRequest\x1a\x18.service.GetUserResponse\x12E\n" +
	"\n" +
	"UpdateUser\x12\x1a.service.UpdateUserRequest\x1a\x1b.service.UpdateUserResponse\x12E\n" +
	"\n" +
	"DeleteUser\x12\x1a.service.DeleteUserRequest\x1a\x1b.service.DeleteUserResponse\x12B\n" +
	"\tListUsers\x12\x19.service.ListUsersRequest\x1a\x1a.service.ListUsersResponse\x12E\n" +
	"\n" +
	"InviteUser\x12\x1a.service.InviteUserRequest\x1a\x1b.service.InviteUserResponse\x12Q\n" +
	"\x0eValidateInvite\x12\x1e.service.ValidateInviteRequest\x1a\x1f.service.ValidateInviteResponse\x12E\n" +
	"\n" +
	"ScanDomain\x12\x1a.service.ScanDomainRequest\x1a\x1b.service.ScanDomainResponse\x12r\n" +
	"\x19GetDNSScanResultsByDomain\x12).service.GetDNSScanResultsByDomainRequest\x1a*.service.GetDNSScanResultsByDomainResponse\x12<\n" +
	"\aScanTLS\x12\x17.service.ScanTLSRequest\x1a\x18.service.ScanTLSResponse\x12r\n" +
	"\x19GetTLSScanResultsByDomain\x12).service.GetTLSScanResultsByDomainRequest\x1a*.service.GetTLSScanResultsByDomainResponse\x12B\n" +
	"\tScanCrtSh\x12\x19.service.ScanCrtShRequest\x1a\x1a.service.ScanCrtShResponse\x12x\n" +
	"\x1bGetCrtShScanResultsByDomain\x12+.service.GetCrtShScanResultsByDomainRequest\x1a,.service.GetCrtShScanResultsByDomainResponse\x12B\n" +
	"\tScanChaos\x12\x19.service.ScanChaosRequest\x1a\x1a.service.ScanChaosResponse\x12x\n" +
	"\x1bGetChaosScanResultsByDomain\x12+.service.GetChaosScanResultsByDomainRequest\x1a,.service.GetChaosScanResultsByDomainResponse\x12E\n" +
	"\n" +
	"ScanShodan\x12\x1a.service.ScanShodanRequest\x1a\x1b.service.ScanShodanResponse\x12{\n" +
	"\x1cGetShodanScanResultsByDomain\x12,.service.GetShodanScanResultsByDomainRequest\x1a-.service.GetShodanScanResultsByDomainResponse\x12<\n" +
	"\aScanOTX\x12\x17.service.ScanOTXRequest\x1a\x18.service.ScanOTXResponse\x12r\n" +
	"\x19GetOTXScanResultsByDomain\x12).service.GetOTXScanResultsByDomainRequest\x1a*.service.GetOTXScanResultsByDomainResponseB\x1fZ\x1dgithub.com/moos3/sparta/protob\x06proto3"

var (
	file_proto_service_proto_rawDescOnce sync.Once
	file_proto_service_proto_rawDescData []byte
)

func file_proto_service_proto_rawDescGZIP() []byte {
	file_proto_service_proto_rawDescOnce.Do(func() {
		file_proto_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_service_proto_rawDesc), len(file_proto_service_proto_rawDesc)))
	})
	return file_proto_service_proto_rawDescData
}

var file_proto_service_proto_msgTypes = make([]protoimpl.MessageInfo, 60)
var file_proto_service_proto_goTypes = []any{
	(*CreateUserRequest)(nil),                    // 0: service.CreateUserRequest
	(*CreateUserResponse)(nil),                   // 1: service.CreateUserResponse
	(*GetUserRequest)(nil),                       // 2: service.GetUserRequest
	(*GetUserResponse)(nil),                      // 3: service.GetUserResponse
	(*UpdateUserRequest)(nil),                    // 4: service.UpdateUserRequest
	(*UpdateUserResponse)(nil),                   // 5: service.UpdateUserResponse
	(*DeleteUserRequest)(nil),                    // 6: service.DeleteUserRequest
	(*DeleteUserResponse)(nil),                   // 7: service.DeleteUserResponse
	(*ListUsersRequest)(nil),                     // 8: service.ListUsersRequest
	(*ListUsersResponse)(nil),                    // 9: service.ListUsersResponse
	(*User)(nil),                                 // 10: service.User
	(*InviteUserRequest)(nil),                    // 11: service.InviteUserRequest
	(*InviteUserResponse)(nil),                   // 12: service.InviteUserResponse
	(*ValidateInviteRequest)(nil),                // 13: service.ValidateInviteRequest
	(*ValidateInviteResponse)(nil),               // 14: service.ValidateInviteResponse
	(*ScanDomainRequest)(nil),                    // 15: service.ScanDomainRequest
	(*ScanDomainResponse)(nil),                   // 16: service.ScanDomainResponse
	(*GetDNSScanResultsByDomainRequest)(nil),     // 17: service.GetDNSScanResultsByDomainRequest
	(*GetDNSScanResultsByDomainResponse)(nil),    // 18: service.GetDNSScanResultsByDomainResponse
	(*DNSSecurityResult)(nil),                    // 19: service.DNSSecurityResult
	(*DNSScanResult)(nil),                        // 20: service.DNSScanResult
	(*ScanTLSRequest)(nil),                       // 21: service.ScanTLSRequest
	(*ScanTLSResponse)(nil),                      // 22: service.ScanTLSResponse
	(*GetTLSScanResultsByDomainRequest)(nil),     // 23: service.GetTLSScanResultsByDomainRequest
	(*GetTLSScanResultsByDomainResponse)(nil),    // 24: service.GetTLSScanResultsByDomainResponse
	(*TLSSecurityResult)(nil),                    // 25: service.TLSSecurityResult
	(*TLSScanResult)(nil),                        // 26: service.TLSScanResult
	(*ScanCrtShRequest)(nil),                     // 27: service.ScanCrtShRequest
	(*ScanCrtShResponse)(nil),                    // 28: service.ScanCrtShResponse
	(*GetCrtShScanResultsByDomainRequest)(nil),   // 29: service.GetCrtShScanResultsByDomainRequest
	(*GetCrtShScanResultsByDomainResponse)(nil),  // 30: service.GetCrtShScanResultsByDomainResponse
	(*CrtShCertificate)(nil),                     // 31: service.CrtShCertificate
	(*CrtShSecurityResult)(nil),                  // 32: service.CrtShSecurityResult
	(*CrtShScanResult)(nil),                      // 33: service.CrtShScanResult
	(*ScanChaosRequest)(nil),                     // 34: service.ScanChaosRequest
	(*ScanChaosResponse)(nil),                    // 35: service.ScanChaosResponse
	(*GetChaosScanResultsByDomainRequest)(nil),   // 36: service.GetChaosScanResultsByDomainRequest
	(*GetChaosScanResultsByDomainResponse)(nil),  // 37: service.GetChaosScanResultsByDomainResponse
	(*ChaosSecurityResult)(nil),                  // 38: service.ChaosSecurityResult
	(*ChaosScanResult)(nil),                      // 39: service.ChaosScanResult
	(*ScanShodanRequest)(nil),                    // 40: service.ScanShodanRequest
	(*ScanShodanResponse)(nil),                   // 41: service.ScanShodanResponse
	(*GetShodanScanResultsByDomainRequest)(nil),  // 42: service.GetShodanScanResultsByDomainRequest
	(*GetShodanScanResultsByDomainResponse)(nil), // 43: service.GetShodanScanResultsByDomainResponse
	(*ShodanLocation)(nil),                       // 44: service.ShodanLocation
	(*ShodanSSL)(nil),                            // 45: service.ShodanSSL
	(*ShodanMetadata)(nil),                       // 46: service.ShodanMetadata
	(*ShodanHost)(nil),                           // 47: service.ShodanHost
	(*ShodanSecurityResult)(nil),                 // 48: service.ShodanSecurityResult
	(*ShodanScanResult)(nil),                     // 49: service.ShodanScanResult
	(*ScanOTXRequest)(nil),                       // 50: service.ScanOTXRequest
	(*ScanOTXResponse)(nil),                      // 51: service.ScanOTXResponse
	(*GetOTXScanResultsByDomainRequest)(nil),     // 52: service.GetOTXScanResultsByDomainRequest
	(*GetOTXScanResultsByDomainResponse)(nil),    // 53: service.GetOTXScanResultsByDomainResponse
	(*OTXGeneralInfo)(nil),                       // 54: service.OTXGeneralInfo
	(*OTXMalware)(nil),                           // 55: service.OTXMalware
	(*OTXURL)(nil),                               // 56: service.OTXURL
	(*OTXPassiveDNS)(nil),                        // 57: service.OTXPassiveDNS
	(*OTXSecurityResult)(nil),                    // 58: service.OTXSecurityResult
	(*OTXScanResult)(nil),                        // 59: service.OTXScanResult
}
var file_proto_service_proto_depIdxs = []int32{
	10, // 0: service.ListUsersResponse.users:type_name -> service.User
	19, // 1: service.ScanDomainResponse.result:type_name -> service.DNSSecurityResult
	20, // 2: service.GetDNSScanResultsByDomainResponse.results:type_name -> service.DNSScanResult
	19, // 3: service.DNSScanResult.result:type_name -> service.DNSSecurityResult
	25, // 4: service.ScanTLSResponse.result:type_name -> service.TLSSecurityResult
	26, // 5: service.GetTLSScanResultsByDomainResponse.results:type_name -> service.TLSScanResult
	25, // 6: service.TLSScanResult.result:type_name -> service.TLSSecurityResult
	32, // 7: service.ScanCrtShResponse.result:type_name -> service.CrtShSecurityResult
	33, // 8: service.GetCrtShScanResultsByDomainResponse.results:type_name -> service.CrtShScanResult
	31, // 9: service.CrtShSecurityResult.certificates:type_name -> service.CrtShCertificate
	32, // 10: service.CrtShScanResult.result:type_name -> service.CrtShSecurityResult
	38, // 11: service.ScanChaosResponse.result:type_name -> service.ChaosSecurityResult
	39, // 12: service.GetChaosScanResultsByDomainResponse.results:type_name -> service.ChaosScanResult
	38, // 13: service.ChaosScanResult.result:type_name -> service.ChaosSecurityResult
	48, // 14: service.ScanShodanResponse.result:type_name -> service.ShodanSecurityResult
	49, // 15: service.GetShodanScanResultsByDomainResponse.results:type_name -> service.ShodanScanResult
	44, // 16: service.ShodanHost.location:type_name -> service.ShodanLocation
	45, // 17: service.ShodanHost.ssl:type_name -> service.ShodanSSL
	46, // 18: service.ShodanHost.shodan_meta:type_name -> service.ShodanMetadata
	47, // 19: service.ShodanSecurityResult.hosts:type_name -> service.ShodanHost
	48, // 20: service.ShodanScanResult.result:type_name -> service.ShodanSecurityResult
	58, // 21: service.ScanOTXResponse.result:type_name -> service.OTXSecurityResult
	59, // 22: service.GetOTXScanResultsByDomainResponse.results:type_name -> service.OTXScanResult
	54, // 23: service.OTXSecurityResult.general_info:type_name -> service.OTXGeneralInfo
	55, // 24: service.OTXSecurityResult.malware:type_name -> service.OTXMalware
	56, // 25: service.OTXSecurityResult.urls:type_name -> service.OTXURL
	57, // 26: service.OTXSecurityResult.passive_dns:type_name -> service.OTXPassiveDNS
	58, // 27: service.OTXScanResult.result:type_name -> service.OTXSecurityResult
	0,  // 28: service.UserService.CreateUser:input_type -> service.CreateUserRequest
	2,  // 29: service.UserService.GetUser:input_type -> service.GetUserRequest
	4,  // 30: service.UserService.UpdateUser:input_type -> service.UpdateUserRequest
	6,  // 31: service.UserService.DeleteUser:input_type -> service.DeleteUserRequest
	8,  // 32: service.UserService.ListUsers:input_type -> service.ListUsersRequest
	11, // 33: service.UserService.InviteUser:input_type -> service.InviteUserRequest
	13, // 34: service.UserService.ValidateInvite:input_type -> service.ValidateInviteRequest
	15, // 35: service.UserService.ScanDomain:input_type -> service.ScanDomainRequest
	17, // 36: service.UserService.GetDNSScanResultsByDomain:input_type -> service.GetDNSScanResultsByDomainRequest
	21, // 37: service.UserService.ScanTLS:input_type -> service.ScanTLSRequest
	23, // 38: service.UserService.GetTLSScanResultsByDomain:input_type -> service.GetTLSScanResultsByDomainRequest
	27, // 39: service.UserService.ScanCrtSh:input_type -> service.ScanCrtShRequest
	29, // 40: service.UserService.GetCrtShScanResultsByDomain:input_type -> service.GetCrtShScanResultsByDomainRequest
	34, // 41: service.UserService.ScanChaos:input_type -> service.ScanChaosRequest
	36, // 42: service.UserService.GetChaosScanResultsByDomain:input_type -> service.GetChaosScanResultsByDomainRequest
	40, // 43: service.UserService.ScanShodan:input_type -> service.ScanShodanRequest
	42, // 44: service.UserService.GetShodanScanResultsByDomain:input_type -> service.GetShodanScanResultsByDomainRequest
	50, // 45: service.UserService.ScanOTX:input_type -> service.ScanOTXRequest
	52, // 46: service.UserService.GetOTXScanResultsByDomain:input_type -> service.GetOTXScanResultsByDomainRequest
	1,  // 47: service.UserService.CreateUser:output_type -> service.CreateUserResponse
	3,  // 48: service.UserService.GetUser:output_type -> service.GetUserResponse
	5,  // 49: service.UserService.UpdateUser:output_type -> service.UpdateUserResponse
	7,  // 50: service.UserService.DeleteUser:output_type -> service.DeleteUserResponse
	9,  // 51: service.UserService.ListUsers:output_type -> service.ListUsersResponse
	12, // 52: service.UserService.InviteUser:output_type -> service.InviteUserResponse
	14, // 53: service.UserService.ValidateInvite:output_type -> service.ValidateInviteResponse
	16, // 54: service.UserService.ScanDomain:output_type -> service.ScanDomainResponse
	18, // 55: service.UserService.GetDNSScanResultsByDomain:output_type -> service.GetDNSScanResultsByDomainResponse
	22, // 56: service.UserService.ScanTLS:output_type -> service.ScanTLSResponse
	24, // 57: service.UserService.GetTLSScanResultsByDomain:output_type -> service.GetTLSScanResultsByDomainResponse
	28, // 58: service.UserService.ScanCrtSh:output_type -> service.ScanCrtShResponse
	30, // 59: service.UserService.GetCrtShScanResultsByDomain:output_type -> service.GetCrtShScanResultsByDomainResponse
	35, // 60: service.UserService.ScanChaos:output_type -> service.ScanChaosResponse
	37, // 61: service.UserService.GetChaosScanResultsByDomain:output_type -> service.GetChaosScanResultsByDomainResponse
	41, // 62: service.UserService.ScanShodan:output_type -> service.ScanShodanResponse
	43, // 63: service.UserService.GetShodanScanResultsByDomain:output_type -> service.GetShodanScanResultsByDomainResponse
	51, // 64: service.UserService.ScanOTX:output_type -> service.ScanOTXResponse
	53, // 65: service.UserService.GetOTXScanResultsByDomain:output_type -> service.GetOTXScanResultsByDomainResponse
	47, // [47:66] is the sub-list for method output_type
	28, // [28:47] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_proto_service_proto_init() }
func file_proto_service_proto_init() {
	if File_proto_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_service_proto_rawDesc), len(file_proto_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   60,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_service_proto_goTypes,
		DependencyIndexes: file_proto_service_proto_depIdxs,
		MessageInfos:      file_proto_service_proto_msgTypes,
	}.Build()
	File_proto_service_proto = out.File
	file_proto_service_proto_goTypes = nil
	file_proto_service_proto_depIdxs = nil
}
